* Project Shells

** Why bother?

This is to manage multiple shell (or terminal) buffers for each
project.  For example, to develop for Linux kernel, I usually use one
shell buffer to configure and build kernel, one shell buffer to run
some git command not supported by magit, one shell buffer to run qemu
for built kernel, one shell buffer to ssh into guest system to test.
Different set of commands is used by the shell in each buffer, so each
shell should have different command history configuration, and for
some shell, I may need different setup.  And I have several projects
to work on.  In addition to project specific shell buffers, I want
some global shell buffers, so that I can use them whichever project I
am working on.  Project shells is an Emacs program to let my life
easier via helping me to manage all these shell/terminal buffers.

** How to use

Firstly, you need to run project-shells-setup, the parameter is the
keymap to add project shells key binding.  For example, to use project
shells with projectile you can put the following forms in your init
file,

(require 'project-shells)

(project-shells-setup projectile-mode-map)

You can add project shells key binding in other keymap too, or you can
create your own keymap.

After binding the key, you can create or switch to project shells via,

<prefix key> <shell key>

The default <shell key>s are "1", "2", "3", "4", "5", "6", "7", "8",
"9", "0", "-", "=", so you can have 12 shell/terminal buffers for each
project.  You can customize the number of buffers and keys to activate
them via project-shells-keys.  By default "1" - "0" will create shell
buffers, while "-" and "=" will create terminal buffers.

To create or switch to global shells, you need to use position
parameter for the <shell key>.  For example,

<prefix key> C-u <shell key>

** Work with project management package

You need a project management package enabled, so that project shells
knows what the current project is and what the project root directory
is.  The default configuration works with projectile.  To work with
other project management package, you need to customize
project-shells-project-name-func and project-shells-project-root-func.
